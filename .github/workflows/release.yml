name: Tagged Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    name: "Tagged Release"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Add GitHub NuGet source
      run: dotnet nuget add source --username oliverbooth --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/oliverbooth/index.json"

    - name: Add BaGet source
      run: dotnet nuget add source --username oliverbooth --password ${{ secrets.BAGET_API_KEY }} --store-password-in-clear-text --name baget "https://nuget.oliverbooth.dev/v3/index.json"

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release

    - name: Build NuGet package
      run: |
        mkdir build
        dotnet pack VpSharp -p:SymbolPackageFormat=snupkg --include-symbols --include-source -o build
        dotnet pack VpSharp.Building -p:SymbolPackageFormat=snupkg --include-symbols --include-source -o build
        dotnet pack VpSharp.Commands -p:SymbolPackageFormat=snupkg --include-symbols --include-source -o build

    - name: Push NuGet Package to GitHub
      run: dotnet nuget push "build/*" --source "github" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate

    - name: Push NuGet Package to BaGet
      run: dotnet nuget push "build/*" --source "baget" --api-key ${{ secrets.BAGET_API_KEY }} --skip-duplicate

    - name: Push NuGet Package to nuget.org
      run: dotnet nuget push "build/*" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate

    - name: Create Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
